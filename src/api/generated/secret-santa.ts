/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * gift-sync-back-end
 * OpenAPI spec version: 1.0.0
 */
import { useMutation } from '@tanstack/react-query'
import type {
    MutationFunction,
    UseMutationOptions,
    UseMutationResult,
} from '@tanstack/react-query'
import type {
    ErrorResponseApiDTO,
    SecretSantaRequestApiDTO,
    SecretSantaResponseApiDTO,
} from './Api.schemas'
import { customInstance } from '../customInstance'
import type { ErrorType, BodyType } from '../customInstance'

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1]

export const postSecretSanta = (
    secretSantaRequestApiDTO: BodyType<SecretSantaRequestApiDTO>,
    options?: SecondParameter<typeof customInstance>
) => {
    return customInstance<SecretSantaResponseApiDTO>(
        {
            url: `/secret-santa`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: secretSantaRequestApiDTO,
        },
        options
    )
}

export const getPostSecretSantaMutationOptions = <
    TError = ErrorType<ErrorResponseApiDTO>,
    TContext = unknown,
>(options?: {
    mutation?: UseMutationOptions<
        Awaited<ReturnType<typeof postSecretSanta>>,
        TError,
        { data: BodyType<SecretSantaRequestApiDTO> },
        TContext
    >
    request?: SecondParameter<typeof customInstance>
}): UseMutationOptions<
    Awaited<ReturnType<typeof postSecretSanta>>,
    TError,
    { data: BodyType<SecretSantaRequestApiDTO> },
    TContext
> => {
    const { mutation: mutationOptions, request: requestOptions } = options ?? {}

    const mutationFn: MutationFunction<
        Awaited<ReturnType<typeof postSecretSanta>>,
        { data: BodyType<SecretSantaRequestApiDTO> }
    > = (props) => {
        const { data } = props ?? {}

        return postSecretSanta(data, requestOptions)
    }

    return { mutationFn, ...mutationOptions }
}

export type PostSecretSantaMutationResult = NonNullable<
    Awaited<ReturnType<typeof postSecretSanta>>
>
export type PostSecretSantaMutationBody = BodyType<SecretSantaRequestApiDTO>
export type PostSecretSantaMutationError = ErrorType<ErrorResponseApiDTO>

export const usePostSecretSanta = <
    TError = ErrorType<ErrorResponseApiDTO>,
    TContext = unknown,
>(options?: {
    mutation?: UseMutationOptions<
        Awaited<ReturnType<typeof postSecretSanta>>,
        TError,
        { data: BodyType<SecretSantaRequestApiDTO> },
        TContext
    >
    request?: SecondParameter<typeof customInstance>
}): UseMutationResult<
    Awaited<ReturnType<typeof postSecretSanta>>,
    TError,
    { data: BodyType<SecretSantaRequestApiDTO> },
    TContext
> => {
    const mutationOptions = getPostSecretSantaMutationOptions(options)

    return useMutation(mutationOptions)
}
